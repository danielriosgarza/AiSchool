episode:
  mix: {enabled: true, short_horizon: 10, long_horizon: 250, short_prob: 0.1}
  dt_hours: 1.0
  training_mode: fast

simulation:
  min_steps_per_pulse: 10
  steps_per_hour_factor: 50

actions:
  pH_mode: emergent
  actuators:
    - {name: q,    type: continuous}
    - {name: v,    type: continuous}
    - {name: stir, type: continuous}
    - {name: temp, type: continuous}
  bounds:
    q:    [0.0, 0.2]
    v:    [0.0, 0.1]
    stir: [0.0, 1.0]
    temp: [25.0, 45.0]

observations:
  include: [met.all, pH.used, actuator_echo.all, met.delta.all, met.rate.all]
  pipeline:
    - normalize: {method: running_mean_var, clip: [-5, 5]}
    - clip: {min: -10, max: 10}

rewards:
  error_reward: -1000.0

  terms:
    # (Unchanged) Short-only production shaping with deadbanded delta
    - {expr: "(clip((met['butyrate'] - 2.0) / 6.0, 0, 1) * gate(abs(delta(met['butyrate'])), 0.02, delta(met['butyrate']))) / kpi.horizon", weight: 200.0, when: short}

    # (Unchanged) Per-step level shaping (always)
    - {expr: "(clip(met['butyrate'] - 8.0, 0, 1e9) ** 1.0) / kpi.horizon", weight: 0.75}

    # NEW — 5→8 corridor progress (always):
    # Rewards ONLY positive delta when B is between 5 and 8, peaking near the middle.
    - {expr: "(clip(delta(met['butyrate']), 0, 1e9) * clip(met['butyrate'] - 5.0, 0, 3.0) * clip(8.0 - met['butyrate'], 0, 3.0)) / (9.0 * kpi.horizon)", weight: 300.0}

    # (Unchanged) Control costs (always)
    - {expr: "(action.q * dt_hours) / kpi.horizon",           weight: -0.015}
    - {expr: "(action.v) / kpi.horizon",                       weight: -0.025}
    - {expr: "(abs(action.temp - 37)) / kpi.horizon",          weight: -0.015}
    - {expr: "(action.stir) / kpi.horizon",                    weight: -0.008}

  terminal:
    # (Unchanged) Terminal level bonus (always)
    - {expr: "(clip(met['butyrate'] - 8.0, 0, 1e9) ** 1.0)", weight: 15.0}

    # (Unchanged) Progressive terminal bonus (long-only)
    - {expr: "(clip((met['butyrate'] - 1.0) / 9.0, 0, 1.0) ** 2) * met['butyrate']", weight: 25.0, when: long}

    # NEW — Success bonus for hitting ≥8 (long-only)
    - {expr: "clip(met['butyrate'] - 8.0, 0, 1e9)", weight: 30.0, when: long}

# Keep short-only randomization as in parity
init_randomization:
  enabled: true
  apply_to: short
  metabolites:
    - {pattern: ".*", low: 0.0, high: 8.0}
